{"version":3,"sources":["components/Cita.js","models/Cita.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Cita","cita","deleteCita","id","propietario","mascota","sintomas","fecha","hora","className","Date","toLocaleDateString","weekday","year","month","day","data-id","onClick","e","target","dataset","Form","addNewCita","useState","setCita","error","setError","handleChange","name","value","resetForm","setIdNewCita","nanoid","validateCita","trim","onSubmit","preventDefault","type","placeholder","onChange","App","citasStorage","JSON","parse","localStorage","getItem","citas","setCitas","titulo","length","useEffect","setItem","stringify","filter","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3935ce3.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Cita = ({ cita, deleteCita }) => {\n    const { id, propietario, mascota, sintomas, fecha, hora } = cita;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    const handleClick = (e) => {\n        deleteCita(e.target.dataset.id)\n    }\n    return (\n        <div className=\"cita\">\n            <p>Cita: <span>{new Date(fecha).toLocaleDateString('es-ES', options)}</span><span> a las {hora} hrs</span></p>\n            <p>Cliente: <span> {propietario} </span></p>\n            <p>Mascota: <span> {mascota} </span></p>\n            <p>Sintomas: <span> {sintomas} </span></p>\n            <button\n                data-id={id}\n                className=\"button eliminar u-full-width\"\n                onClick={handleClick}\n            >\n                Eliminar\n            </button>\n        </div>\n    )\n}\nCita.propTypes = {\n    cita: PropTypes.object.isRequired,\n    deleteCita: PropTypes.func.isRequired\n}\nexport { Cita };\n\n","const Cita = {\n    id: \"\",\n    propietario: \"\",\n    mascota: \"\",\n    sintomas: \"\",\n    fecha: \"\",\n    hora: \"\",\n};\n\nexport { Cita };\n","import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Cita } from '../models/Cita';\n\nconst Form = ({ addNewCita }) => {\n\n    const [cita, setCita] = useState(Cita);\n\n    const { propietario, mascota, sintomas, fecha, hora } = cita;\n    const [error, setError] = useState(false)\n\n    const handleChange = (e) => {\n        setCita({\n            ...cita,\n            [e.target.name]: e.target.value\n        })\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!validateCita()) return\n        setIdNewCita();\n        addNewCita(cita);\n        resetForm();\n    }\n    const resetForm = () => setCita(Cita)\n    const setIdNewCita = () => {\n        cita.id = nanoid()\n    }\n    const validateCita = () => {\n        if (\n            propietario.trim() === \"\" ||\n            mascota.trim() === \"\" ||\n            sintomas.trim() === \"\" ||\n            fecha.trim() === \"\" ||\n            hora.trim() === \"\"\n        ) {\n            setError(true);\n            return false;\n        }\n        setError(false);\n        return true;\n    }\n\n    return (\n        <>\n            <h2>Agendar Cita</h2>\n            {error ? <p className=\"alerta-error\">Todos los campo son obligatorios</p> : null}\n            <form onSubmit={handleSubmit}>\n                <label>Nombre Cliente</label>\n                <input\n                    type=\"text\"\n                    name=\"propietario\"\n                    className=\"u-full-width\"\n                    placeholder=\"Coloca tu nombre completo\"\n                    onChange={handleChange}\n                    value={propietario}\n                />\n                <label>Nombre Mascota</label>\n                <input\n                    type=\"text\"\n                    name=\"mascota\"\n                    className=\"u-full-width\"\n                    placeholder=\"Coloca el nombre de tu mascota\"\n                    onChange={handleChange}\n                    value={mascota}\n                />\n                <label>Fecha</label>\n                <input\n                    type=\"date\"\n                    name=\"fecha\"\n                    className=\"u-full-width\"\n                    onChange={handleChange}\n                    value={fecha}\n                />\n                <label>Hora</label>\n                <input\n                    type=\"time\"\n                    name=\"hora\"\n                    className=\"u-full-width\"\n                    onChange={handleChange}\n                    value={hora}\n                />\n                <label>Sintomas</label>\n                <textarea\n                    name=\"sintomas\"\n                    className=\"u-full-width\"\n                    onChange={handleChange}\n                    value={sintomas}\n                >\n                </textarea>\n                <button\n                    type=\"submit\"\n                    className=\"u-full-width button-primary\"\n                >\n                    Agendar Cita\n                </button>\n            </form>\n        </>\n    )\n}\n\nForm.propTypes = {\n    addNewCita: PropTypes.func.isRequired\n}\nexport { Form };\n\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Cita } from \"./components/Cita\";\nimport { Form } from './components/Form';\nfunction App() {\n  let citasStorage = JSON.parse(localStorage.getItem('citas'))\n  if (!citasStorage) citasStorage = []\n  const [citas, setCitas] = useState(citasStorage)\n  const titulo = citas.length > 0 ? 'Citas Agendadas' : 'No hay Citas';\n\n  useEffect(() => {\n    let citasStorage = JSON.parse(localStorage.getItem('citas'))\n    if (citasStorage) {\n      localStorage.setItem('citas', JSON.stringify(citas))\n    } else {\n      localStorage.setItem('citas', JSON.stringify([]))\n    }\n\n  }, [citas])\n\n  const addNewCita = cita => {\n    setCitas([\n      ...citas,\n      cita\n    ])\n  }\n\n  const deleteCita = id => {\n    setCitas(\n      citas.filter(cita => cita.id !== id)\n    )\n  }\n  return (\n    <>\n      <h1>Administrador de Pacientes</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Form addNewCita={addNewCita} />\n          </div>\n          <div className=\"one-half column\">\n            <h2>{titulo}</h2>\n            {citas.map(cita => <Cita\n              key={cita.id}\n              cita={cita}\n              deleteCita={deleteCita}\n            />)}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}